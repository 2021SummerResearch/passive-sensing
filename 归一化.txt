import pandas as pd
import numpy as np
from matplotlib import pyplot as plt

data = pd.read_csv("./左划数据.csv", encoding="big5")  # 从CSV文件导入

raw_data = data.to_numpy()
print(len(raw_data))  # 原始数据共184000个

num_2CH = 1000  # 双通道每组数据的个数

dataSplit = {}
for i in range(int(len(raw_data)/num_2CH)):
    sample = np.empty([num_2CH])
    sample = raw_data[i*num_2CH:(i+1)*num_2CH]
    dataSplit[i] = sample  # dataSplit[i]代表第i组数据
print(len(dataSplit))  # 共有数据184组
print(len(dataSplit[0]))  # 每组数据1000个元素，前500个代表通道1，后500个代表通道2
# 归一化方法：线性归一化: x'=(x-x_min)/(x_max-x_min)
for i in range(int(len(dataSplit))):
    dataSplit[i] = (dataSplit[i] - min(dataSplit[i])) / (max(dataSplit[i]) - min(dataSplit[i]))



data_ch1 = dataSplit[1][0:int(num_2CH/2), :]  # 1通道数据
data_ch2 = dataSplit[1][int(num_2CH/2):num_2CH, :]  # 2通道数据
# 将数据分成通道1和通道2各184组
dataChannel_1 = {}
dataChannel_2 = {}
for i in range(int(len(dataSplit))):
    dataChannel_1[i] = dataSplit[i][0:int(num_2CH/2), :]
    dataChannel_2[i] = dataSplit[i][int(num_2CH/2):num_2CH, :]
'''
plt.figure()
plt.plot(data_ch1)
plt.plot(data_ch2)
plt.show()
'''
# 尝试在x方向归一化一组数据
min_loc_ch1 = np.argmin(data_ch1)  # 1通道数据最小值的位置
min_loc_ch2 = np.argmin(data_ch2)  # 2通道数据最小值的位置
print(min_loc_ch1)
print(min_loc_ch2)
min_loc_avg = int((min_loc_ch1 + min_loc_ch2) / 2)  # 两通道的平均位置
print(min_loc_avg)

width = 100  # 从中间部分向两侧取的宽度
if(min(len(data_ch1) - min_loc_ch1, min_loc_ch1) > width):
    data_ch1_xnorm = data_ch1[min_loc_ch1 - width:min_loc_ch1 + width]

data_ch2_xnorm = data_ch2[min_loc_ch2 - width:min_loc_ch2 + width]



# 在x方向归一化全部数据 操作对象：dataChannel_1[i]和dataChannel_2[i]
# 得到的1通道数据和2通道数据分别为data_ch1_xnorm[i]和data_ch2_xnorm[i]
width = 145  # x归一化时，最低点位置平均值两边的宽度
data_ch1_xnorm = {}
data_ch2_xnorm = {}
for i in range(int(len(dataChannel_1))):
    min_loc_ch1 = np.argmin(dataChannel_1[i])  # 1通道数据最小值的位置
    min_loc_ch2 = np.argmin(dataChannel_2[i])  # 2通道数据最小值的位置
    min_loc_avg = int((min_loc_ch1 + min_loc_ch2) / 2)
    data_ch1_xnorm[i] = dataChannel_1[i][min_loc_avg - width:min_loc_avg + width]
    data_ch2_xnorm[i] = dataChannel_2[i][min_loc_avg - width:min_loc_avg + width]
'''
plt.figure()
plt.plot(data_ch1_xnorm[40])
plt.plot(data_ch2_xnorm[40])
plt.show()
'''
# 转化成excel文件
data_sum_ch1 = pd.Series()
data_sum_ch2 = pd.Series()
for i in range(int(len(data_ch1_xnorm))):
    a = data_ch1_xnorm[i]
    a = a.flatten()
    a = pd.Series(a)
    data_sum_ch1 = pd.concat([data_sum_ch1, a])


for i in range(int(len(data_ch2_xnorm))):
    a = data_ch2_xnorm[i]
    a = a.flatten()
    a = pd.Series(a)
    data_sum_ch2 = pd.concat([data_sum_ch2, a])

writer = pd.ExcelWriter("slide left.xlsx")
data_sum_ch1.to_excel(writer, 'page_1', float_format='%.5f')
data_sum_ch2.to_excel(writer, 'page_2', float_format='%.5f')
writer.save()

